/**
 * This class is generated by jOOQ
 */
package org.jooq.util.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.util.maven.example.Keys;
import org.jooq.util.maven.example.Public;
import org.jooq.util.maven.example.tables.records.PositionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Positions extends TableImpl<PositionsRecord> {

    private static final long serialVersionUID = 1614906300;

    /**
     * The reference instance of <code>public.positions</code>
     */
    public static final Positions POSITIONS = new Positions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PositionsRecord> getRecordType() {
        return PositionsRecord.class;
    }

    /**
     * The column <code>public.positions.position_id</code>.
     */
    public final TableField<PositionsRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('positions_position_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.positions.name</code>.
     */
    public final TableField<PositionsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.positions.description</code>.
     */
    public final TableField<PositionsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.positions</code> table reference
     */
    public Positions() {
        this("positions", null);
    }

    /**
     * Create an aliased <code>public.positions</code> table reference
     */
    public Positions(String alias) {
        this(alias, POSITIONS);
    }

    private Positions(String alias, Table<PositionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Positions(String alias, Table<PositionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PositionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POSITIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PositionsRecord> getPrimaryKey() {
        return Keys.POSITIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PositionsRecord>> getKeys() {
        return Arrays.<UniqueKey<PositionsRecord>>asList(Keys.POSITIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Positions as(String alias) {
        return new Positions(alias, this);
    }

    /**
     * Rename this table
     */
    public Positions rename(String name) {
        return new Positions(name, null);
    }
}
