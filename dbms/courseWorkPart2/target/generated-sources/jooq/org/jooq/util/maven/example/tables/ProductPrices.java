/**
 * This class is generated by jOOQ
 */
package org.jooq.util.maven.example.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.util.maven.example.Keys;
import org.jooq.util.maven.example.Public;
import org.jooq.util.maven.example.tables.records.ProductPricesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductPrices extends TableImpl<ProductPricesRecord> {

    private static final long serialVersionUID = -1636799259;

    /**
     * The reference instance of <code>public.product_prices</code>
     */
    public static final ProductPrices PRODUCT_PRICES = new ProductPrices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductPricesRecord> getRecordType() {
        return ProductPricesRecord.class;
    }

    /**
     * The column <code>public.product_prices.product_id</code>.
     */
    public final TableField<ProductPricesRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product_prices_product_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.product_prices.shop_id</code>.
     */
    public final TableField<ProductPricesRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.product_prices.price</code>.
     */
    public final TableField<ProductPricesRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.product_prices.updated</code>.
     */
    public final TableField<ProductPricesRecord, Date> UPDATED = createField("updated", org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.field("date(now())", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * Create a <code>public.product_prices</code> table reference
     */
    public ProductPrices() {
        this("product_prices", null);
    }

    /**
     * Create an aliased <code>public.product_prices</code> table reference
     */
    public ProductPrices(String alias) {
        this(alias, PRODUCT_PRICES);
    }

    private ProductPrices(String alias, Table<ProductPricesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductPrices(String alias, Table<ProductPricesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductPricesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT_PRICES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductPricesRecord> getPrimaryKey() {
        return Keys.PRODUCT_PRICES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductPricesRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductPricesRecord>>asList(Keys.PRODUCT_PRICES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProductPricesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductPricesRecord, ?>>asList(Keys.PRODUCT_PRICES__FK_PRODUCT_ID, Keys.PRODUCT_PRICES__FK_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPrices as(String alias) {
        return new ProductPrices(alias, this);
    }

    /**
     * Rename this table
     */
    public ProductPrices rename(String name) {
        return new ProductPrices(name, null);
    }
}
