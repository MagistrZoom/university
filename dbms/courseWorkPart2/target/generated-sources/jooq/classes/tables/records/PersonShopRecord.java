/**
 * This class is generated by jOOQ
 */
package classes.tables.records;


import classes.tables.PersonShop;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonShopRecord extends UpdatableRecordImpl<PersonShopRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -988754432;

    /**
     * Setter for <code>public.person_shop.person_id</code>.
     */
    public void setPersonId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.person_shop.person_id</code>.
     */
    public Integer getPersonId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.person_shop.shop_id</code>.
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.person_shop.shop_id</code>.
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PersonShop.PERSON_SHOP.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PersonShop.PERSON_SHOP.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonShopRecord value1(Integer value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonShopRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonShopRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonShopRecord
     */
    public PersonShopRecord() {
        super(PersonShop.PERSON_SHOP);
    }

    /**
     * Create a detached, initialised PersonShopRecord
     */
    public PersonShopRecord(Integer personId, Integer shopId) {
        super(PersonShop.PERSON_SHOP);

        set(0, personId);
        set(1, shopId);
    }
}
