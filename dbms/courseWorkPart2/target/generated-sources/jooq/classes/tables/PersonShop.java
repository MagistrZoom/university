/**
 * This class is generated by jOOQ
 */
package classes.tables;


import classes.Keys;
import classes.Public;
import classes.tables.records.PersonShopRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonShop extends TableImpl<PersonShopRecord> {

    private static final long serialVersionUID = -1763857954;

    /**
     * The reference instance of <code>public.person_shop</code>
     */
    public static final PersonShop PERSON_SHOP = new PersonShop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonShopRecord> getRecordType() {
        return PersonShopRecord.class;
    }

    /**
     * The column <code>public.person_shop.person_id</code>.
     */
    public final TableField<PersonShopRecord, Integer> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.person_shop.shop_id</code>.
     */
    public final TableField<PersonShopRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.person_shop</code> table reference
     */
    public PersonShop() {
        this("person_shop", null);
    }

    /**
     * Create an aliased <code>public.person_shop</code> table reference
     */
    public PersonShop(String alias) {
        this(alias, PERSON_SHOP);
    }

    private PersonShop(String alias, Table<PersonShopRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonShop(String alias, Table<PersonShopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonShopRecord> getPrimaryKey() {
        return Keys.PERSON_SHOP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonShopRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonShopRecord>>asList(Keys.PERSON_SHOP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonShopRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonShopRecord, ?>>asList(Keys.PERSON_SHOP__TTT, Keys.PERSON_SHOP__FK_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonShop as(String alias) {
        return new PersonShop(alias, this);
    }

    /**
     * Rename this table
     */
    public PersonShop rename(String name) {
        return new PersonShop(name, null);
    }
}
