/**
 * This class is generated by jOOQ
 */
package classes.tables;


import classes.Keys;
import classes.Public;
import classes.tables.records.PositionSalaryRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PositionSalary extends TableImpl<PositionSalaryRecord> {

    private static final long serialVersionUID = -692763555;

    /**
     * The reference instance of <code>public.position_salary</code>
     */
    public static final PositionSalary POSITION_SALARY = new PositionSalary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PositionSalaryRecord> getRecordType() {
        return PositionSalaryRecord.class;
    }

    /**
     * The column <code>public.position_salary.position_id</code>.
     */
    public final TableField<PositionSalaryRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.position_salary.shop_id</code>.
     */
    public final TableField<PositionSalaryRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.position_salary.salary</code>.
     */
    public final TableField<PositionSalaryRecord, BigDecimal> SALARY = createField("salary", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.position_salary</code> table reference
     */
    public PositionSalary() {
        this("position_salary", null);
    }

    /**
     * Create an aliased <code>public.position_salary</code> table reference
     */
    public PositionSalary(String alias) {
        this(alias, POSITION_SALARY);
    }

    private PositionSalary(String alias, Table<PositionSalaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private PositionSalary(String alias, Table<PositionSalaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PositionSalaryRecord> getPrimaryKey() {
        return Keys.POSITION_SALARY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PositionSalaryRecord>> getKeys() {
        return Arrays.<UniqueKey<PositionSalaryRecord>>asList(Keys.POSITION_SALARY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PositionSalaryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PositionSalaryRecord, ?>>asList(Keys.POSITION_SALARY__FK_POSITION_ID, Keys.POSITION_SALARY__FK_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PositionSalary as(String alias) {
        return new PositionSalary(alias, this);
    }

    /**
     * Rename this table
     */
    public PositionSalary rename(String name) {
        return new PositionSalary(name, null);
    }
}
