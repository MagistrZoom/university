/**
 * This class is generated by jOOQ
 */
package classes.tables.records;


import classes.tables.ProductPrices;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductPricesRecord extends UpdatableRecordImpl<ProductPricesRecord> implements Record4<Integer, Integer, BigDecimal, Date> {

    private static final long serialVersionUID = 310224410;

    /**
     * Setter for <code>public.product_prices.product_id</code>.
     */
    public void setProductId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.product_prices.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.product_prices.shop_id</code>.
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.product_prices.shop_id</code>.
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.product_prices.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.product_prices.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.product_prices.updated</code>.
     */
    public void setUpdated(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.product_prices.updated</code>.
     */
    public Date getUpdated() {
        return (Date) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, BigDecimal, Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, BigDecimal, Date> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ProductPrices.PRODUCT_PRICES.PRODUCT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ProductPrices.PRODUCT_PRICES.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return ProductPrices.PRODUCT_PRICES.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return ProductPrices.PRODUCT_PRICES.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getProductId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricesRecord value1(Integer value) {
        setProductId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricesRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricesRecord value3(BigDecimal value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricesRecord value4(Date value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricesRecord values(Integer value1, Integer value2, BigDecimal value3, Date value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductPricesRecord
     */
    public ProductPricesRecord() {
        super(ProductPrices.PRODUCT_PRICES);
    }

    /**
     * Create a detached, initialised ProductPricesRecord
     */
    public ProductPricesRecord(Integer productId, Integer shopId, BigDecimal price, Date updated) {
        super(ProductPrices.PRODUCT_PRICES);

        set(0, productId);
        set(1, shopId);
        set(2, price);
        set(3, updated);
    }
}
