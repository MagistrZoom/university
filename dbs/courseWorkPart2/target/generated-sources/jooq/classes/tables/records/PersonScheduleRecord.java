/**
 * This class is generated by jOOQ
 */
package classes.tables.records;


import classes.tables.PersonSchedule;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonScheduleRecord extends UpdatableRecordImpl<PersonScheduleRecord> implements Record4<Integer, Integer, String[], Date> {

    private static final long serialVersionUID = -1174424847;

    /**
     * Setter for <code>public.person_schedule.sched_id</code>.
     */
    public void setSchedId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.person_schedule.sched_id</code>.
     */
    public Integer getSchedId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.person_schedule.person_id</code>.
     */
    public void setPersonId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.person_schedule.person_id</code>.
     */
    public Integer getPersonId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.person_schedule.timetable</code>.
     */
    public void setTimetable(String[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.person_schedule.timetable</code>.
     */
    public String[] getTimetable() {
        return (String[]) get(2);
    }

    /**
     * Setter for <code>public.person_schedule.updated</code>.
     */
    public void setUpdated(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.person_schedule.updated</code>.
     */
    public Date getUpdated() {
        return (Date) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String[], Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String[], Date> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PersonSchedule.PERSON_SCHEDULE.SCHED_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PersonSchedule.PERSON_SCHEDULE.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field3() {
        return PersonSchedule.PERSON_SCHEDULE.TIMETABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return PersonSchedule.PERSON_SCHEDULE.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSchedId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value3() {
        return getTimetable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonScheduleRecord value1(Integer value) {
        setSchedId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonScheduleRecord value2(Integer value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonScheduleRecord value3(String[] value) {
        setTimetable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonScheduleRecord value4(Date value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonScheduleRecord values(Integer value1, Integer value2, String[] value3, Date value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonScheduleRecord
     */
    public PersonScheduleRecord() {
        super(PersonSchedule.PERSON_SCHEDULE);
    }

    /**
     * Create a detached, initialised PersonScheduleRecord
     */
    public PersonScheduleRecord(Integer schedId, Integer personId, String[] timetable, Date updated) {
        super(PersonSchedule.PERSON_SCHEDULE);

        set(0, schedId);
        set(1, personId);
        set(2, timetable);
        set(3, updated);
    }
}
